#!/bin/bash

function print_usage() {
cat <<EOF

USAGE: 

faas build -n <name> -v <version> -f <path>
  This command will build the function based on the code available in the path directory, using the name 
  specified for the image that is built

faas create -f <path>
  This command will create the resource[s] based on the resource definition[s] that the path points to

Options:

  -n  | --name - the name of the function (defaults to nake of current directory)
  -v  | --version - the version of the function (defaults to v0001)
  -f  | --filename - filename, directory, or URL for the code or resource (defaults to current directory)

EOF
}

function build() {
  echo "Building $FUNCTION $FNPATH $VERSION"
  docker build -t "sk8s/${FUNCTION}:${VERSION}" $FNPATH
}

function create() {
  echo "Creating $FNPATH resource[s]"
  kubectl create -f $FNPATH
}

# ======================================= FUNCTIONS END =======================================

if [[ $1 == "--help" || $1 == "-h" ]] ; then
    print_usage
    exit 0
fi

if [[ $# == 0 ]]; then
  print_usage
  exit 0
fi

COMMAND="$1"
shift

while [[ $# > 0 ]]
do
key="$1"
case ${key} in
 -n|--name)
 FUNCTION="$2"
 shift
 ;;
 -f|--filename)
 FNPATH="$2"
 shift
 ;;
 -v|--version)
 VERSION="$2"
 shift
 ;;
 --help)
 print_usage
 exit 0
 ;;
 *)
 echo ""
 echo "ERROR: Invalid option: [$1]"
 print_usage
 exit 1
 ;;
esac
shift
done

# ======================================= DEFAULTS ============================================
FUNCTION="${FUNCTION:-${PWD##*/}}"
FNPATH="${FNPATH:-.}"
VERSION="${VERSION:-v0001}"
# ======================================= DEFAULTS END ========================================
if [[ "${COMMAND}" == "build" ]]; then
  build
elif [[ "${COMMAND}" == "create" ]]; then
  create
else
  echo "$COMMAND is an invalid command"
  exit 1;
fi

