// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import mock "github.com/stretchr/testify/mock"
import v1alpha1 "github.com/projectriff/riff/kubernetes-crds/pkg/apis/projectriff.io/v1alpha1"

// Deployer is an autogenerated mock type for the Deployer type
type Deployer struct {
	mock.Mock
}

// Deploy provides a mock function with given fields: topicBinding, function
func (_m *Deployer) Deploy(topicBinding *v1alpha1.TopicBinding, function *v1alpha1.Function) error {
	ret := _m.Called(topicBinding, function)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1alpha1.TopicBinding, *v1alpha1.Function) error); ok {
		r0 = rf(topicBinding, function)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Scale provides a mock function with given fields: topicBinding, replicas
func (_m *Deployer) Scale(topicBinding *v1alpha1.TopicBinding, replicas int) error {
	ret := _m.Called(topicBinding, replicas)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1alpha1.TopicBinding, int) error); ok {
		r0 = rf(topicBinding, replicas)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Undeploy provides a mock function with given fields: topicBinding
func (_m *Deployer) Undeploy(topicBinding *v1alpha1.TopicBinding) error {
	ret := _m.Called(topicBinding)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1alpha1.TopicBinding) error); ok {
		r0 = rf(topicBinding)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: topicBinding, function, replicas
func (_m *Deployer) Update(topicBinding *v1alpha1.TopicBinding, function *v1alpha1.Function, replicas int) error {
	ret := _m.Called(topicBinding, function, replicas)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1alpha1.TopicBinding, *v1alpha1.Function, int) error); ok {
		r0 = rf(topicBinding, function, replicas)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
