jobs:
# - job: unit
#   strategy:
#     matrix:
#       linux:
#         imageName: 'ubuntu-16.04'
#       mac:
#         imageName: 'macos-10.13'
#       windows:
#         imageName: 'vs2017-win2016'
#   pool:
#     vmImage: $(imageName)
#   variables:
#     GOBIN:  '$(GOPATH)/bin' # Go binaries path
#     GOROOT: '/opt/hostedtoolcache/go/1.12.0/x64' # Go installation path
#     GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
#     modulePath: '$(build.repository.name)' # Path to the module's code
#   steps:
#   - template: ci/unit-test-steps.yml
- job: stage
  # dependsOn: unit
  pool:
    vmImage: ubuntu-16.04
  variables:
    GOBIN:  '$(GOPATH)/bin' # Go binaries path
    GOROOT: '/opt/hostedtoolcache/go/1.12.0/x64' # Go installation path
    GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
    modulePath: '$(build.repository.name)' # Path to the module's code
  steps:
  - template: ci/install-go-steps.yml
  - bash: |
      fats_dir=`pwd`/fats
      fats_repo="projectriff/fats"
      fats_refspec=61c490713c71c354051534349e3ba0c99191ae7d # projectriff/fats master as of 2019-03-31
      ./ci/fats-fetch.sh $fats_dir $fats_refspec $fats_repo

      $fats_dir/install.sh gcloud
    env:
      GCLOUD_CLIENT_SECRET: '$(GcloudClientSecret)'
    workingDirectory: '$(modulePath)'
    displayName: 'Install gcloud'
  - bash: ./ci/stage.sh
    env:
      GCLOUD_CLIENT_SECRET: '$(GcloudClientSecret)'
    workingDirectory: '$(modulePath)'
    displayName: 'Stage riff release artifacts'
- job: fats
  dependsOn: stage
  strategy:
    matrix:
      minikube:
        imageName: ubuntu-16.04
        cluster: minikube
        registry: dockerhub
      gke:
        imageName: ubuntu-16.04
        cluster: gke
        registry: gcr
  pool:
    vmImage: $(imageName)
  variables:
    CLUSTER:  '$(cluster)'
    REGISTRY: '$(registry)'
    CLUSTER_NAME: 'fats-$(Build.BuildId)'
    NAMESPACE: '$(CLUSTER_NAME)'
  steps:
  - script: sudo apt-get update && sudo apt-get install docker.io=18.06.1-0ubuntu1.2~16.04.1
    condition: and(succeeded(), eq(variables['CLUSTER'], 'minikube'))
    displayName: 'Downgrade Docker'
  - bash: ./ci/fats.sh
    env:
      DOCKER_USERNAME: '$(DockerUsername)'
      DOCKER_PASSWORD: '$(DockerPassword)'
      GCLOUD_CLIENT_SECRET: '$(GcloudClientSecret)'
    displayName: 'Run FATS'
  - bash: ./ci/fats-cleanup.sh
    env:
      DOCKER_USERNAME: '$(DockerUsername)'
      DOCKER_PASSWORD: '$(DockerPassword)'
      GCLOUD_CLIENT_SECRET: '$(GcloudClientSecret)'
    condition: always()
    displayName: 'Cleanup FATS'
